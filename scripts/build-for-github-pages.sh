#!/bin/bash
set -e

echo "Building for GitHub Pages..."

# .envファイルがあれば読み込む（ローカル開発用）
if [ -f .env ]; then
  echo "Loading .env file..."
  export $(cat .env | grep -v '^#' | xargs)
fi

# 1. クリーンアップとセットアップ
rm -rf dist
mkdir -p dist

# 2. 依存関係のインストール
npm install

# 3. 環境変数ファイルの生成
mkdir -p dist/js

# env.jsを生成
cat > dist/js/env.js << EOF
// This file is automatically generated during build
// Do not edit this file directly
window.ENV = {
  HEADER_TITLE: "${HEADER_TITLE:-BizenDAO}",
  DEFAULT_SYMBOL: "$(echo -n "${DEFAULT_SYMBOL:-BIZEN}" | tr -d '\n\r')",
  DONATE_SYMBOL: "${DONATE_SYMBOL:-dBIZ}",
  API_BASE_URL: "${API_BASE_URL:-}",
  BOT_API_URL: "${BOT_API_URL:-}",
  ARTICLE_REPO: "${ARTICLE_REPO:-}",
  METABUILDER_URL: "${METABUILDER_URL:-}",
  BC_NETWORK_ID: "${BC_NETWORK_ID:-1}",
  BC_NETWORK_NAME: "${BC_NETWORK_NAME:-Ethereum Mainnet}",
  RPC_URL: "${RPC_URL:-}",
  MANAGER_CA: "${MANAGER_CA:-}",
  MEMBERSCARD_CA: "${MEMBERSCARD_CA:-}",
  SOUL_BINDER_ROLE_ID: "${SOUL_BINDER_ROLE_ID:-1}",
  TBA_SALT: "${TBA_SALT:-0}",
  DISCORD_HOLDER_ROLL_ID: "${DISCORD_HOLDER_ROLL_ID:-}",
  DISCORD_HOLDER_ROLL_NAME: "${DISCORD_HOLDER_ROLL_NAME:-Holder}",
  CRYPTO_SECRET: "${CRYPTO_SECRET:-}",
  SRC_VERSION: "${SRC_VERSION:-1.0.0}"
};
EOF

# 構文チェック
if ! node -c dist/js/env.js 2>/dev/null; then
  echo "ERROR: env.js has syntax errors!"
  cat dist/js/env.js
  exit 1
fi

# 4. TypeScriptのビルド
npx webpack --config webpack.config.js

# 5. 静的ファイルをdistにコピー
cp -r public/* dist/
# webpackの出力を正しい場所に移動
mv public/js/*.bundle.js dist/js/ 2>/dev/null || true
mv public/js/*.bundle.js.LICENSE.txt dist/js/ 2>/dev/null || true

# 6. index.htmlの生成
VERSION=$(date +%s)
sed "s/###VERSION###/$VERSION/g" public/index.html.tmpl > dist/index.html

# 7. env.jsの参照を追加
sed -i.bak '/<\/head>/i\
    <script src="/js/env.js"></script>' dist/index.html && rm dist/index.html.bak

# 8. GitHub Pages用の設定
touch dist/.nojekyll

# 9. 404ページの生成（SPAのルーティング対応）
cp dist/index.html dist/404.html

echo "Build completed successfully!"
echo "Output directory: dist/"